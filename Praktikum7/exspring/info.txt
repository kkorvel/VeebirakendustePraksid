
ctx.getBean(X.class) - Spring-ilt X tüüpi objekti küsimine.

@Resource - Annotatsioon, mis ütleb Spring-ile, et tema peab selle välja ära väärtustama.

@Repository - Annotatsioon, mis ütleb Spring-ile, et tema peab seda klassi tundma.

@ComponentScan(basePackages = {"service", "..."}) - Ütleb Spring-ile, et nendest pakkettidest tuleks bean-e otsida.

System.identityHashCode(x) - Ütleb objekti x mälu aadressi. Kui kaks muutujat annavad sama tulemuse, siis viitavad nad samale objektile.

@Scope(BeanDefinition.SCOPE_PROTOTYPE) - ütleb, et sellest bean-ist tuleb iga kord uus koopia anda.

Sql:
  CREATE TABLE person (id BIGINT GENERATED BY DEFAULT AS IDENTITY, name VARCHAR(255))
  INSERT INTO person values (1, 'John')

@PersistenceContext - Annotatsioon, mis ütleb Spring-ile, et siia tuleb süstida EntityManager.

@Transactional - Annotatsioon, mis ütleb Spring-ile, et selle meetodi alguses tuleb aulstada transaktsiooniga ja meetodi lõppedes alustatud transaktsioon lõpetada.

@Entity - Annotatsioon, mis ütleb Jpa-le, et sina pead oskama seda klassi andmebaasi salvestada ja sealt lugeda.

@EnableAspectJAutoProxy - Luba AOP-d.

@Aspect - AOP element mis, milles olevat koodi võib dünaamiliselt liita muule koodile.

@Before("execution(* packagename.ClassName.*(..))") - tähistb meetodit, mis tuleb käivitada määratud enne määratud meetodite väljakutset.
